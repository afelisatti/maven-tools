/**
 * This file was automatically generated by the Mule ESB Maven Tools
 */
package org.myfakecompany.app;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertNotNull;
import static org.junit.Assert.assertNull;
import org.mule.DefaultMuleMessage;
import org.mule.api.MuleMessage;
import org.mule.api.client.MuleClient;
import org.mule.tck.junit4.DomainFunctionalTestCase;
import org.mule.transport.NullPayload;

import org.junit.Test;

public class ExampleFunctionalTestCase extends DomainFunctionalTestCase
{
    private static final int RECEIVE_TIMEOUT = 5000;

    @Override
    protected String getDomainConfig()
    {
        //TODO Rename accordingly if needed.
        return "mule-domain-config.xml";
    }

    @Override
    public ApplicationConfig[] getConfigResources()
    {
        return new ApplicationConfig[] {
                new ApplicationConfig("myApp", new String[] {"src/main/app/mule-config.xml"})
        };
    }

    @Test
    public void testConfiguration() throws Exception
    {
        MuleClient client = getMuleContextForApp("myApp").getClient();
        MuleMessage message = new DefaultMuleMessage("some data", getMuleContextForApp("myApp"));
        MuleMessage result = client.send("http://localhost:8081/domain/test", message);
        assertNotNull(result);
        assertNull(result.getExceptionPayload());
        assertFalse(result.getPayload() instanceof NullPayload);

        assertEquals("Received", result.getPayloadAsString());
    }
}
